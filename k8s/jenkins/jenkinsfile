pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('docker-hub-credentials')
        IMAGE_VERSION = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', credentialsId: 'github-credentials', url: 'https://github.com/YOUR_GITHUB_USER/todoapp.git'
            }
        }

        stage('Build .NET Backend') {
            steps {
                script {
                    sh 'cd backend && dotnet build --configuration Release'
                }
            }
        }

        stage('Build Angular Frontend') {
            steps {
                script {
                    sh 'cd frontend && npm install && npm run build --prod'
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    sh """
                    docker build -t danchiwaz/todoapp-backend:${IMAGE_VERSION} ./backend
                    """
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    sh """
                    echo "${DOCKERHUB_CREDENTIALS_PSW}" | docker login -u "${DOCKERHUB_CREDENTIALS_USR}" --password-stdin
                    docker push danchiwaz/todoapp-backend:${IMAGE_VERSION}
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh """
                    kubectl set image deployment/todoapp-backend todoapp-backend=danchiwaz/todo-backend:${IMAGE_VERSION}
                    """
                }
            }
        }
    }
}
